result_list = []
def decomposition(m, n):
#   Функция принимает 2 параметра:
#   m - текущее число в цикле
#   n - введённое число
    for j in range(1, n + 1):
#       Проверка того, что число создаёт с другим числом пару, сумма чисел которой подходит под условие кратности с введённым числом
        if n % (m + j) == 0:
#           Заношу пару во временный список, чтобы можно было его отсортировать, чтобы обеспечить уникальность значений в итоговом списке
            temp_list = [m, j]
            temp_list.sort()
            if j != m and result_list.count(temp_list) == 0:
#               Внутри функции происходит заполнение итогового списка
                result_list.append(temp_list)

n = int(input("Введите число (от 3 до 20) "))

# Проверка введённого числа
if n >= 3 and n <= 20:
    print(f"Число {n} подходит")
#   Перебор чисел от 1 до введённого
    for i in range(1, n + 1):
#       Вызов функции обработки для каждого числа числа
        decomposition(i, n)

#   Собираю конечный результат в виде строки
    result = "".join(str(element[0]) + str(element[1]) for element in result_list)
    print("Result =", result)

# Если введено неподходящее число
else:
    print(f"Число {n} не подходит, введите число от 3 до 20")


